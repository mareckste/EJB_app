package facade;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

import javax.annotation.Resource;
import javax.ejb.EJBContext;
import javax.ejb.Stateless;
import javax.ejb.TransactionManagement;
import javax.ejb.TransactionManagementType;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.transaction.UserTransaction;

import entity.Flight;
import entity.User;
import entity.UserFlight;
import remote.MyTransactionFacadeBeanRemote;

/**
 * Session Bean implementation class TransactionFacadeBean
 */
@Stateless
@TransactionManagement(TransactionManagementType.BEAN)
public class MyTransactionFacadeBean implements MyTransactionFacadeBeanRemote {

	@PersistenceContext
	private EntityManager em;
	
	@Resource
	private EJBContext context;
	
	private static final String connectionClass = "org.postgresql.Driver";
	private static final String connectionDriverUrl = "jdbc:postgresql://localhost:5432/vava";
	private static final String connectionLogin = "postgres";
	private static final String connectionPW = "Pg123456";
	
    public boolean createOrUpdateUser(User u) {
    	UserTransaction ut = context.getUserTransaction();
    	
    	try {
    		ut.begin();
    		em.persist(u);
    		
    		ut.commit();
    	} catch(Exception e) {
    		try {
				ut.rollback();
			} catch (Exception ex) {
				ex.printStackTrace();
			}
    		
    	}
    	
    	return false;
    }
    
    public void addFlight(UserFlight uf, Flight f, User u) {
    	UserTransaction ut = context.getUserTransaction();
    	try {
    		ut.begin();
    		em.persist(u);
    		ut.commit();
    	} catch(Exception e) {
    		try {
				ut.rollback();
			} catch (Exception ex) {
				ex.printStackTrace();
			}
    		
    	}
    }
    
    public void addRec(int userID, Flight f) {
    	Class.forName("org.apache.derby.jdbc.ClientDriver");
        Connection con = DriverManager.getConnection
        ("jdbc:derby://localhost:1527/testDb","name","pass");
        PreparedStatement updateemp = con.prepareStatement
        ("insert into emp values(?,?,?)");
        updateemp.setInt(1,23);
        updateemp.setString(2,"Roshan");
        updateemp.setString(3, "CEO");
        updateemp.executeUpdate();
    }
    
    
}
